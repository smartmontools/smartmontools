version: 2

references:

  get_svn_commit: &get_svn_commit
    run:
      name: Get SVN revision from the git SHA1 using github API
      command: |
        curl --silent https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/commits/${CIRCLE_SHA1} \
        | jq .commit.message | sed -E 's|.*git-svn-id: http://svn.code.sf.net/p/smartmontools/code/trunk@([0-9]+).*|\1|' >~/SVNREV &&
        test "`cat ~/SVNREV`" -gt "0" && echo SVN revision: r`cat ~/SVNREV`

  svn_checkout: &svn_checkout
    run:
      name: Checkout from sf.net and set SOURCE_DATE_EPOCH
      command: |
        svn --config-option 'config:miscellany:use-commit-times=yes' checkout \
          https://svn.code.sf.net/p/smartmontools/code/trunk/smartmontools@`cat ~/SVNREV` \
          ~/smartmontools &&
        d=`svn info --show-item last-changed-date ~/smartmontools` &&
        s=`date -d "$d" +%s` && s=$((s+1)) &&
        echo "SOURCE_DATE_EPOCH=$s # `date -d @"$s" -u -Is`" &&
        echo "$s" >~/SOURCE_DATE_EPOCH

  sm_distfile: &sm_distfile
    run:
      name: Creating src.tar.gz
      command: |
        cd ~/smartmontools &&
        sed -n 's|^AC_INIT[^,]*, *\[\([0-9.]*\)\] *,.*$|\1|p' configure.ac > ~/SM_VER &&
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV` &&
        SOURCE_DATE_EPOCH=`cat ~/SOURCE_DATE_EPOCH` &&
        ./autogen.sh --force &&
        mkdir build && cd build &&
        ../configure SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH} &&
        make dist && tar -tvzf smartmontools-${SM_VER}.tar.gz &&
        mkdir /artefacts &&
        cp ~/SOURCE_DATE_EPOCH /artefacts/smartmontools-${SM_VER}-r${SVNREV}.source_date_epoch.txt &&
        mv smartmontools-${SM_VER}.tar.gz /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz

  sm_compile_linux: &sm_compile_linux
    run:
      name: Creating static x86_64 linux binaries
      command: |
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV` &&
        SOURCE_DATE_EPOCH=`cat ~/SOURCE_DATE_EPOCH` &&
        BUILD_INFO='"(CircleCI)"' &&
        mkdir ~/build && cd ~/build &&
        tar -xzf /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz &&
        cd smartmontools-${SM_VER} && mkdir build && cd build &&
        ../configure LDFLAGS="-static" SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH} &&
        make -j3 BUILD_INFO="$BUILD_INFO" && make check &&
        mkdir inst && make DESTDIR="$(pwd)/inst" install &&
        (cd inst && tar --sort=name --mtime=@${SOURCE_DATE_EPOCH} \
         -czf "/artefacts/smartmontools-linux-x86_64-static-${SM_VER}-r${SVNREV}.tar.gz" *) &&
        rm -rf ~/build

  sm_compile_linux32: &sm_compile_linux32
    run:
      name: Creating static i386 linux binaries
      command: |
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV` &&
        SOURCE_DATE_EPOCH=`cat ~/SOURCE_DATE_EPOCH` &&
        BUILD_INFO='"(CircleCI)"' &&
        mkdir ~/build && cd ~/build &&
        tar -xzf /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz &&
        cd smartmontools-${SM_VER} && mkdir build && cd build &&
        ../configure CC="gcc -m32" CXX="g++ -m32" LDFLAGS="-static" \
          SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH} &&
        make -j3 BUILD_INFO="$BUILD_INFO" && make check &&
        mkdir inst && make DESTDIR="$(pwd)/inst" install &&
        (cd inst && tar --sort=name --mtime=@${SOURCE_DATE_EPOCH} \
         -czf "/artefacts/smartmontools-linux-i386-static-${SM_VER}-r${SVNREV}.tar.gz" *) &&
        rm -rf ~/build

  sm_compile_linux_clang: &sm_compile_linux_clang
    run:
      name: Creating static x86_64 linux binaries and Clang Static Analyzer report
      command: |
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV` &&
        SOURCE_DATE_EPOCH=`cat ~/SOURCE_DATE_EPOCH` &&
        BUILD_INFO='"(CircleCI)"' &&
        mkdir ~/build && cd ~/build &&
        tar -xzf /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz &&
        cd smartmontools-${SM_VER} && mkdir build && cd build &&
        ../configure CC=clang CXX=clang++ LDFLAGS="-static" SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH} &&
        HTMLDIR="smartmontools-linux-clang-analyzer-${SM_VER}-r${SVNREV}" &&
        CHECKERS="
          optin.portability.UnixAPI optin.cplusplus.VirtualCall
          nullability.NullableDereferenced nullability.NullablePassedToNonnull
          nullability.NullableReturnedFromNonnull
          security.FloatLoopCounter security.insecureAPI.strcpy
          valist.CopyToSelf valist.Uninitialized valist.Unterminated
        " &&
        scan-build --use-cc clang --use-c++ clang++ -o $HTMLDIR \
            `for x in $CHECKERS; do echo -enable-checker $x; done` \
          make -j3 BUILD_INFO="$BUILD_INFO" && make check &&
        mkdir inst && make DESTDIR="$(pwd)/inst" install &&
        (cd inst && tar --sort=name --mtime=@${SOURCE_DATE_EPOCH} \
         -czf "/artefacts/smartmontools-linux-x86_64-static-clang-${SM_VER}-r${SVNREV}.tar.gz" *) &&
        if ls -d $HTMLDIR/* >/dev/null 2>/dev/null; then
          tar czf "/artefacts/$HTMLDIR.tar.gz" $HTMLDIR ;
        fi &&
        rm -rf ~/build

  sm_compile_win: &sm_compile_win
    run:
      name: Creating Windows installer
      command: |
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV` &&
        SOURCE_DATE_EPOCH=`cat ~/SOURCE_DATE_EPOCH` &&
        BUILD_INFO='"(CircleCI)"' &&
        mkdir ~/build && cd ~/build &&
        tar -xzf /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz &&
        cd smartmontools-${SM_VER} && mkdir build && cd build &&
        ../configure build_alias=$(../config.guess) host_alias=i686-w64-mingw32 \
          SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH} &&
        make -j3 BUILD_INFO="$BUILD_INFO" && make distdir-win32 &&
        cd .. && mkdir build64 && cd build64 &&
        ../configure build_alias=$(../config.guess) host_alias=x86_64-w64-mingw32 \
          SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH} &&
        make -j3 BUILD_INFO="$BUILD_INFO" && make distdir-win32 &&
        cd ../build &&
        dest="smartmontools-win32-setup-${SM_VER}-r${SVNREV}.exe" &&
        make BUILD_INFO="$BUILD_INFO" builddir_win64=../build64 distinst_win32="$dest" installer-win32 &&
        mv "$dest" /artefacts &&
        rm -rf ~/build

  sm_compile_darwin: &sm_compile_darwin
    run:
      name: Creating Darwin image
      command: |
        export PATH=/usr/osxcross/bin/:$PATH &&
        export LD_LIBRARY_PATH=/usr/osxcross/lib &&
        BUILD_INFO='"(CircleCI)"' &&
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV` &&
        export SOURCE_DATE_EPOCH=`cat ~/SOURCE_DATE_EPOCH` &&
        mkdir ~/build && cd ~/build &&
        tar -xzf /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz &&
        cd smartmontools-${SM_VER} && mkdir build && cd build &&
        ../configure build_alias=$(../config.guess) host_alias=x86_64-apple-darwin14 \
          'CC=o64-clang' 'CXX=o64-clang++' 'CFLAGS=-arch arm64 -arch x86_64' \
          'CXXFLAGS=-arch arm64 -arch x86_64 -stdlib=libc++' '--sysconfdir=/private/etc' \
          SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH} &&
        make -j3 BUILD_INFO="$BUILD_INFO" &&
        make pkg_darwin=smartmontools-${SM_VER}-r${SVNREV}.pkg dmg_darwin=smartmontools-${SM_VER}-r${SVNREV}.dmg install-darwin &&
        mv smartmontools-${SM_VER}-r${SVNREV}.dmg "/artefacts/" &&
        rm -rf ~/build

  sm_compile_freebsd13: &sm_compile_freebsd13
    run:
      name: Creating static FreeBSD-13.4/amd64 binaries
      command: |
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV` &&
        SOURCE_DATE_EPOCH=`cat ~/SOURCE_DATE_EPOCH` &&
        BUILD_INFO='"(CircleCI)"' &&
        mkdir ~/build && cd ~/build &&
        tar -xzf /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz &&
        cd smartmontools-${SM_VER} && mkdir build && cd build &&
        TARGET="-target x86_64-unknown-freebsd13 --sysroot=/opt/cross-freebsd-13/" &&
        ../configure CC="clang $TARGET" CXX="clang++ $TARGET" \
          CPPFLAGS="-isystem /opt/cross-freebsd-13/usr/include/c++/v1" \
          LDFLAGS="-static" --host=x86_64-pc-freebsd13 \
          SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH} &&
        make -j3 BUILD_INFO="$BUILD_INFO" &&
        mkdir inst && make DESTDIR="$(pwd)/inst" install &&
        (cd inst && tar --sort=name --mtime=@${SOURCE_DATE_EPOCH} \
         -czf "/artefacts/smartmontools-freebsd13.4-amd64-static-${SM_VER}-r${SVNREV}.tar.gz" *) &&
        rm -rf ~/build

  sm_compile_freebsd14: &sm_compile_freebsd14
    run:
      name: Creating static FreeBSD-14.1/amd64 binaries
      command: |
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV` &&
        SOURCE_DATE_EPOCH=`cat ~/SOURCE_DATE_EPOCH` &&
        BUILD_INFO='"(CircleCI)"' &&
        mkdir ~/build && cd ~/build &&
        tar -xzf /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz &&
        cd smartmontools-${SM_VER} && mkdir build && cd build &&
        TARGET="-target x86_64-unknown-freebsd14 --sysroot=/opt/cross-freebsd-14/" &&
        ../configure CC="clang $TARGET" CXX="clang++ $TARGET" \
          CPPFLAGS="-isystem /opt/cross-freebsd-14/usr/include/c++/v1" \
          LDFLAGS="-static" --host=x86_64-pc-freebsd14 \
          SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH} &&
        make -j3 BUILD_INFO="$BUILD_INFO" &&
        mkdir inst && make DESTDIR="$(pwd)/inst" install &&
        (cd inst && tar --sort=name --mtime=@${SOURCE_DATE_EPOCH} \
         -czf "/artefacts/smartmontools-freebsd14.1-amd64-static-${SM_VER}-r${SVNREV}.tar.gz" *) &&
        rm -rf ~/build

  sm_run_cppcheck: &sm_run_cppcheck
    run:
      name: Creating Cppcheck report
      command: |
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV` &&
        mkdir ~/build && cd ~/build &&
        tar -xzf /artefacts/smartmontools-${SM_VER}-r${SVNREV}.src.tar.gz &&
        cd smartmontools-${SM_VER} &&
        ./cppcheck.sh -j3 -q | tee /artefacts/smartmontools-cppcheck-${SM_VER}-r${SVNREV}.txt &&
        rm -rf ~/build

  sm_compute_hashes: &sm_compute_hashes
    run:
      name: Compute SHA256 hashes of all generated files
      command: |
        SM_VER=`cat ~/SM_VER` && SVNREV=`cat ~/SVNREV` &&
        cd /artefacts &&
        sha256sum smartmontools-* > smartmontools-${SM_VER}-r${SVNREV}.all.sha256 &&
        cat smartmontools-${SM_VER}-r${SVNREV}.all.sha256

  centos_deps: &centos_deps
    run:
      name: Install dependencies on CentOS.
      command: |
        yum update -y
        yum install -y gcc git make gcc-c++ automake

jobs:

  test_ubuntu_latest:
    docker:
      - image: ghcr.io/smartmontools/docker-build:master
    working_directory: ~/smartmontools
    steps:
      - *get_svn_commit
      - *svn_checkout
      - *sm_distfile
      - *sm_compile_linux
      - *sm_compile_linux32
      - *sm_compile_win
      - *sm_compile_darwin
      - *sm_compile_freebsd13
      - *sm_compile_freebsd14
      - *sm_compile_linux_clang
      - *sm_run_cppcheck
      - *sm_compute_hashes

      - store_artifacts:
          path: /artefacts
          destination: builds

  test_centos_latest:
    docker:
      - image: centos:latest
    working_directory: ~/smartmontools
    steps:
      - *centos_deps
      - checkout
      # - *sm_compile
      # - *sm_install

workflows:

  version: 2
  test-matrix:
    jobs:
      - test_ubuntu_latest
##      - test_centos_latest
