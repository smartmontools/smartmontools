## Process this file with automake to produce Makefile.in
#
# lib/Makefile.am
#

if REPRODUCIBLE_BUILD
set_source_date_epoch = SOURCE_DATE_EPOCH=$(SOURCE_DATE_EPOCH)
def_source_date_epoch = -D$(set_source_date_epoch)
if OS_DARWIN
export ZERO_AR_DATE := 1
endif
endif

# TODO: Remove SMARTMONTOOLS_SYSCONFDIR and SMARTMONTOOLS_DRIVEDBDIR dependency
AM_CPPFLAGS = \
        $(def_source_date_epoch) \
        -DBUILD_INFO='$(BUILD_INFO)' \
        -DSMARTMONTOOLS_SYSCONFDIR='"$(sysconfdir)"' \
         -I ../include -I$(top_srcdir)/include

if ENABLE_DRIVEDB
AM_CPPFLAGS += -DSMARTMONTOOLS_DRIVEDBDIR='"$(drivedbdir)"'
endif

if OS_WIN32
AM_CPPFLAGS += -I$(top_srcdir)/include/smartmon/os_win32
endif
if NEED_REGEX
AM_CPPFLAGS += -I$(top_srcdir)/include/smartmon/regex -D_REGEX_STANDALONE
endif

if INSTALL_DEVEL

lib_LTLIBRARIES = libsmartmon.la

if REPRODUCIBLE_BUILD_STATIC_LIB
# Remove timestamps from static library
install-exec-hook:
	$(objcopy_deterministic) $(DESTDIR)$(libdir)/libsmartmon.a
endif

else
noinst_LTLIBRARIES = libsmartmon.la
endif

libsmartmon_la_SOURCES = \
        atacmdnames.cpp \
        atacmds.cpp \
        dev_ata_cmd_set.cpp \
        dev_ata_cmd_set.h \
        dev_intelliprop.cpp \
        dev_interface.cpp \
        dev_jmb39x_raid.cpp \
        dev_tunnelled.h \
        drivedb.h \
        farmcmds.cpp \
        knowndrives.cpp \
        nvmecmds.cpp \
        json.cpp \
        scsicmds.cpp \
        scsiata.cpp \
        scsinvme.cpp \
        utility.cpp

libsmartmon_la_LIBADD = $(os_deps)
libsmartmon_la_DEPENDENCIES = $(os_deps)

EXTRA_libsmartmon_la_SOURCES = \
        os_darwin.cpp \
        os_darwin.h \
        os_linux.cpp \
        os_linux.h \
        os_freebsd.cpp \
        os_freebsd.h \
        os_netbsd.cpp \
        os_netbsd.h \
        os_openbsd.cpp \
        os_openbsd.h \
        os_os2.cpp \
        os_os2.h \
        os_qnxnto.cpp \
        os_qnxnto.h \
        os_solaris.cpp \
        os_win32.cpp \
        os_generic.cpp \
        os_generic.h \
        aacraid.h \
        cciss.cpp \
        cciss.h \
        cissio_freebsd.h \
        dev_areca.cpp \
        dev_areca.h \
        dev_legacy.cpp \
        linux_nvme_ioctl.h \
        freebsd_nvme_ioctl.h \
        netbsd_nvme_ioctl.h \
        openbsd_nvme_ioctl.h \
        megaraid.h \
        sssraid.h

if OS_WIN32
libsmartmon_la_SOURCES += \
        csmisas.h \
        os_win32/wmiquery.cpp

# Windows DLLs do not support undefined symbols
libsmartmon_la_LDFLAGS = -no-undefined -lole32 -loleaut32
endif

if OS_WIN32_MINGW
libsmartmon_la_SOURCES += \
        os_win32/popen_win32.cpp
endif

if NEED_REGEX

libsmartmon_la_SOURCES += \
        regex/regex.c \
        regex/regex_internal.h

# Included by regex.c:
EXTRA_libsmartmon_la_SOURCES += \
        regex/regcomp.c \
        regex/regexec.c \
        regex/regex_internal.c

endif

if ENABLE_DRIVEDB
drivedbinst_DATA = drivedb.h
endif

examples_cpp = \
        examples/ata-standby.cpp \
        examples/lsdisk.cpp

if INSTALL_DEVEL_SRC
develsrc_DATA = \
        examples/Makefile \
        $(examples_cpp)
endif

if INSTALL_DEVEL_BIN

all: examples
install-exec-local: install-examples

else

# Build examples and report failure via a GHA annotation instead of nonzero exit status
check:
	$(MAKE) examples || echo '::error:: Build of libsmartmon examples failed'

endif

EXTRA_DIST = \
        examples/Makefile.in \
        $(examples_cpp)

.PHONY: examples install-examples clean-examples

examples: examples.stamp

examples.stamp: libsmartmon.la examples/Makefile
	$(AM_V_GEN)! test -f $@ || $(MAKE) -C examples clean
	$(AM_V_at)$(MAKE) -C examples \
	  VPATH=$(abs_top_srcdir)/lib/examples \
	  V='$(V)' \
	  CXX='$(CXX)' \
	  CPPFLAGS='-I../../include -I$(abs_top_srcdir)/include $(examples_cppflags)' \
	  LDFLAGS='-L../.libs $(examples_ldflags)'
	$(AM_V_at)touch $@

examples/Makefile: examples/Makefile.in
	$(MAKE) -C .. lib/examples/Makefile

install-examples: examples
	$(MAKE) -C examples DESTDIR=$(DESTDIR) SBINDIR=$(develbindir) install

clean-examples:
	! test -f examples/Makefile || $(MAKE) -C examples clean
	rm -f examples.stamp

clean-local: clean-examples

# 'make maintainer-clean' also removes files generated by './autogen.sh'
MAINTAINERCLEANFILES = \
        $(srcdir)/Makefile.in
